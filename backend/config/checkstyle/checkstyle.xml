<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration based on Java Code Conventions document from Sun Microsystems
    (September 12, 1997)
-->

<module name="Checker">
    <!-- Set the charset to UTF-8 -->
<!--    <property name="charset" value="UTF-8"/>-->

    <!-- Severity of violations -->
    <property name="severity" value="error"/>

    <property name="fileExtensions" value="java, class"/>

    <!-- File length limitations -->
    <module name="FileLength">
        <property name="max" value="2000"/>
    </module>

    <module name="RegexpHeader">
        <property name="header" value="^/\*\s*\n \* ([A-Z][a-zA-Z0-9]+)(\.[A-Z][a-zA-Z0-9]+)*\s*\n \* Version: .*\s*\n \* Date: .*\s*\n \* Copyright: .*\s*\n \*/"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <!-- File tab character check -->
    <module name="FileTabCharacter"/>

    <!-- Line endings should be consistent -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks for whitespace -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <!-- Line length limitations (80 chars) -->
    <module name="LineLength">
        <property name="max" value="80"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <!-- TreeWalker module contains checks that are based on the java grammar -->
    <module name="TreeWalker">
        <!-- Indentation checks -->
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="4"/>
            <property name="lineWrappingIndentation" value="8"/>
            <property name="arrayInitIndent" value="4"/>
        </module>

        <!-- Javadoc Related Checks -->
        <module name="JavadocMethod">
            <property name="allowMissingParamTags" value="false"/>
            <property name="allowMissingReturnTag" value="false"/>
        </module>
        <module name="JavadocType"/>
        <module name="JavadocVariable"/>
        <module name="JavadocStyle">
            <property name="checkFirstSentence" value="true"/>
        </module>

        <!-- Checks for imports -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <module name="ModifierOrder"/>

        <module name="OuterTypeFilename"/>

        <module name="OneTopLevelClass"/>

        <module name="ImportOrder">
            <property name="option" value="top"/>
            <property name="separated" value="true"/>
            <property name="sortStaticImportsAlphabetically" value="true"/>
        </module>

        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="tokens" value="PACKAGE_DEF, IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
                                         STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF"/>
        </module>

        <!-- Checks for naming conventions -->
        <module name="ConstantName"/> <!-- Validates identifiers for static final fields -->
        <module name="LocalFinalVariableName"/> <!-- Validates identifiers for local final variables -->
        <module name="LocalVariableName"/> <!-- Validates identifiers for local variables -->
        <module name="MemberName"/> <!-- Validates identifiers for instance variables -->
        <module name="MethodName"/> <!-- Validates identifiers for methods -->
        <module name="PackageName"/> <!-- Validates identifiers for packages -->
        <module name="ParameterName"/> <!-- Validates identifiers for parameters -->
        <module name="StaticVariableName"/> <!-- Validates identifiers for static variables -->
        <module name="TypeName"/> <!-- Validates identifiers for classes, interfaces, enums, annotations -->

        <!-- Checks for Size Violations -->
        <module name="MethodLength">
            <property name="tokens" value="METHOD_DEF"/>
            <property name="max" value="150"/>
        </module>
        <module name="ParameterNumber">
            <property name="max" value="8"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>

        <!-- Checks for whitespace -->
        <module name="EmptyForIteratorPad"/> <!-- Checks padding of for iterators -->
        <module name="GenericWhitespace"/> <!-- Checks for correct whitespace around generic tokens -->
        <module name="MethodParamPad"/> <!-- Checks padding between method name and opening parenthesis -->
        <module name="NoWhitespaceAfter"/> <!-- Checks that there is no whitespace after specific tokens -->
        <module name="NoWhitespaceBefore"/> <!-- Checks that there is no whitespace before specific tokens -->
        <module name="OperatorWrap"/> <!-- Checks line wrapping for operators -->
        <module name="ParenPad"/> <!-- Checks padding of parentheses -->
        <module name="TypecastParenPad"/> <!-- Checks padding of parentheses for typecasts -->
        <module name="WhitespaceAfter"/> <!-- Checks that a token is followed by whitespace -->
        <module name="WhitespaceAround"/> <!-- Checks that a token is surrounded by whitespace -->

        <!-- Modifier Checks -->
        <module name="ModifierOrder"/> <!-- Checks that modifiers are ordered correctly -->
        <module name="RedundantModifier"/> <!-- Checks for redundant modifiers -->

        <!-- Checks for blocks -->
        <module name="AvoidNestedBlocks"/> <!-- Finds nested blocks -->
        <module name="EmptyBlock"/> <!-- Checks for empty blocks -->
        <module name="LeftCurly"> <!-- Checks the placement of left curly braces -->
            <property name="option" value="eol"/>
        </module>
        <module name="NeedBraces"/> <!-- Checks for braces around code blocks -->
        <module name="RightCurly"/> <!-- Checks the placement of right curly braces -->

        <!-- Checks for common coding problems -->
        <module name="EmptyStatement"/> <!-- Checks for empty statements -->
        <module name="EqualsHashCode"/> <!-- Checks that classes overriding equals() also override hashCode() -->
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
        </module>
        <module name="IllegalInstantiation"/> <!-- Checks for illegal instantiations -->
        <module name="InnerAssignment"/> <!-- Checks for assignments in expressions -->
        <module name="MagicNumber">
            <property name="ignoreNumbers" value="-1, 0, 1"/>
        </module>
        <module name="MissingSwitchDefault"/> <!-- Checks that switch statement has a default clause -->
        <module name="SimplifyBooleanExpression"/> <!-- Checks for overly complicated boolean expressions -->
        <module name="SimplifyBooleanReturn"/> <!-- Checks for overly complicated boolean return statements -->

        <!-- Checks for class design -->
        <module name="FinalClass"/> <!-- Checks that a class which has only private constructors is declared as final -->
        <module name="HideUtilityClassConstructor"/> <!-- Checks that utility classes have no public constructor -->
        <module name="InterfaceIsType"/> <!-- Checks that interfaces are used as types only -->
        <module name="VisibilityModifier"> <!-- Checks visibility of class members -->
            <property name="protectedAllowed" value="true"/>
        </module>

        <!-- Miscellaneous other checks -->
        <module name="ArrayTypeStyle"/> <!-- Checks the style of array type definitions -->
        <module name="FinalParameters"/> <!-- Check that method parameters are final -->
        <module name="TodoComment"> <!-- Checks that there are no TODO comments -->
            <property name="format" value="TODO|FIXME|XXX"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="UpperEll"/> <!-- Checks that long constants are defined with an upper ell -->

        <!-- Special comments check (FIXME, XXX) as mentioned in the document -->
        <module name="Regexp">
            <property name="format" value="XXX"/>
            <property name="message" value="XXX comment indicates something that is bogus but works"/>
            <property name="illegalPattern" value="false"/>
        </module>
        <module name="Regexp">
            <property name="format" value="FIXME"/>
            <property name="message" value="FIXME comment indicates something that is bogus and broken"/>
            <property name="illegalPattern" value="false"/>
        </module>
    </module>
</module>